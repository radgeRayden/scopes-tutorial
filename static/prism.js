var _self="undefined"!=typeof window?window:"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{},Prism=function(c){var p=/\blang(?:uage)?-([\w-]+)\b/i,a=0,j={manual:c.Prism&&c.Prism.manual,disableWorkerMessageHandler:c.Prism&&c.Prism.disableWorkerMessageHandler,util:{encode:function e(a){return a instanceof E?new E(a.type,e(a.content),a.alias):Array.isArray(a)?a.map(e):a.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,"__id",{value:++a}),e.__id},clone:function t(e,r){var n,a;switch(r=r||{},j.util.type(e)){case"Object":if(a=j.util.objId(e),r[a])return r[a];for(var i in n={},r[a]=n,e)e.hasOwnProperty(i)&&(n[i]=t(e[i],r));return n;case"Array":return(a=j.util.objId(e),r[a])?r[a]:(n=[],r[a]=n,e.forEach(function(e,a){n[a]=t(e,r)}),n);default:return e}},getLanguage:function(e){for(;e&&!p.test(e.className);)e=e.parentElement;return e?(e.className.match(p)||[,"none"])[1].toLowerCase():"none"},currentScript:function(){if("undefined"==typeof document)return null;if("currentScript"in document)return document.currentScript;try{throw new Error}catch(e){var a=(/at [^(\r\n]*\((.*):.+:.+\)$/i.exec(e.stack)||[])[1];if(a){var t=document.getElementsByTagName("script");for(var r in t)if(t[r].src==a)return t[r]}return null}},isActive:function(e,a,t){for(var r="no-"+a;e;){var n=e.classList;if(n.contains(a))return!0;if(n.contains(r))return!1;e=e.parentElement}return!!t}},languages:{extend:function(e,a){var t=j.util.clone(j.languages[e]);for(var r in a)t[r]=a[r];return t},insertBefore:function(t,e,a,r){var n=(r=r||j.languages)[t],i={};for(var s in n)if(n.hasOwnProperty(s)){if(s==e)for(var o in a)a.hasOwnProperty(o)&&(i[o]=a[o]);a.hasOwnProperty(s)||(i[s]=n[s])}var l=r[t];return r[t]=i,j.languages.DFS(j.languages,function(e,a){a===l&&e!=t&&(this[e]=i)}),i},DFS:function e(a,t,r,n){n=n||{};var i,s,o=j.util.objId;for(var l in a){a.hasOwnProperty(l)&&(t.call(a,l,a[l],r||l),i=a[l],"Object"!==(s=j.util.type(i))||n[o(i)]?"Array"!==s||n[o(i)]||(n[o(i)]=!0,e(i,t,l,n)):(n[o(i)]=!0,e(i,t,null,n)))}}},plugins:{},highlightAll:function(e,a){j.highlightAllUnder(document,e,a)},highlightAllUnder:function(e,a,t){var r={callback:t,container:e,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'};j.hooks.run("before-highlightall",r),r.elements=Array.prototype.slice.apply(r.container.querySelectorAll(r.selector)),j.hooks.run("before-all-elements-highlight",r);for(var n,i=0;n=r.elements[i++];)j.highlightElement(n,!0===a,r.callback)},highlightElement:function(e,a,t){var r=j.util.getLanguage(e),n=j.languages[r];e.className=e.className.replace(p,"").replace(/\s+/g," ")+" language-"+r;var i=e.parentElement;i&&"pre"===i.nodeName.toLowerCase()&&(i.className=i.className.replace(p,"").replace(/\s+/g," ")+" language-"+r);var s,o={element:e,language:r,grammar:n,code:e.textContent};function l(e){o.highlightedCode=e,j.hooks.run("before-insert",o),o.element.innerHTML=o.highlightedCode,j.hooks.run("after-highlight",o),j.hooks.run("complete",o),t&&t.call(o.element)}if(j.hooks.run("before-sanity-check",o),!o.code)return j.hooks.run("complete",o),void(t&&t.call(o.element));j.hooks.run("before-highlight",o),o.grammar?a&&c.Worker?((s=new Worker(j.filename)).onmessage=function(e){l(e.data)},s.postMessage(JSON.stringify({language:o.language,code:o.code,immediateClose:!0}))):l(j.highlight(o.code,o.grammar,o.language)):l(j.util.encode(o.code))},highlight:function(e,a,t){var r={code:e,grammar:a,language:t};return j.hooks.run("before-tokenize",r),r.tokens=j.tokenize(r.code,r.grammar),j.hooks.run("after-tokenize",r),E.stringify(j.util.encode(r.tokens),r.language)},tokenize:function(e,a){var t=a.rest;if(t){for(var r in t)a[r]=t[r];delete a.rest}var n=new i;return O(n,n.head,e),function e(a,t,r,n,i,s){for(var o in r)if(r.hasOwnProperty(o)&&r[o]){var l=r[o];l=Array.isArray(l)?l:[l];for(var c=0;c<l.length;++c){if(s&&s.cause==o+","+c)return;var p,u=l[c],m=u.inside,_=!!u.lookbehind,g=!!u.greedy,d=0,f=u.alias;g&&!u.pattern.global&&(p=u.pattern.toString().match(/[imsuy]*$/)[0],u.pattern=RegExp(u.pattern.source,p+"g"));for(var y=u.pattern||u,b=n.next,v=i;b!==t.tail&&!(s&&v>=s.reach);v+=b.value.length,b=b.next){var x=b.value;if(t.length>a.length)return;if(!(x instanceof E)){var h,k,w,D,A,S,q=1;if(g&&b!=t.tail.prev){y.lastIndex=v;var C=y.exec(a);if(!C)break;var M=C.index+(_&&C[1]?C[1].length:0),I=C.index+C[0].length,z=v;for(z+=b.value.length;z<=M;)b=b.next,z+=b.value.length;if(z-=b.value.length,v=z,b.value instanceof E)continue;for(var P=b;P!==t.tail&&(z<I||"string"==typeof P.value);P=P.next)q++,z+=P.value.length;q--,x=a.slice(v,z),C.index-=v}else{y.lastIndex=0;var C=y.exec(x)}C&&(_&&(d=C[1]?C[1].length:0),M=C.index+d,h=C[0].slice(d),I=M+h.length,k=x.slice(0,M),w=x.slice(I),D=v+x.length,s&&D>s.reach&&(s.reach=D),A=b.prev,k&&(A=O(t,A,k),v+=k.length),B(t,A,q),S=new E(o,m?j.tokenize(h,m):h,f,h),b=O(t,A,S),w&&O(t,b,w),1<q&&e(a,t,r,b.prev,v,{cause:o+","+c,reach:D}))}}}}}(e,n,a,n.head,0),function(e){var a=[],t=e.head.next;for(;t!==e.tail;)a.push(t.value),t=t.next;return a}(n)},hooks:{all:{},add:function(e,a){var t=j.hooks.all;t[e]=t[e]||[],t[e].push(a)},run:function(e,a){var t=j.hooks.all[e];if(t&&t.length)for(var r,n=0;r=t[n++];)r(a)}},Token:E};function E(e,a,t,r){this.type=e,this.content=a,this.alias=t,this.length=0|(r||"").length}function i(){var e={value:null,prev:null,next:null},a={value:null,prev:e,next:null};e.next=a,this.head=e,this.tail=a,this.length=0}function O(e,a,t){var r=a.next,n={value:t,prev:a,next:r};return a.next=n,r.prev=n,e.length++,n}function B(e,a,t){for(var r=a.next,n=0;n<t&&r!==e.tail;n++)r=r.next;(a.next=r).prev=a,e.length-=n}if(c.Prism=j,E.stringify=function a(e,t){if("string"==typeof e)return e;if(Array.isArray(e)){var r="";return e.forEach(function(e){r+=a(e,t)}),r}var n={type:e.type,content:a(e.content,t),tag:"span",classes:["token",e.type],attributes:{},language:t},i=e.alias;i&&(Array.isArray(i)?Array.prototype.push.apply(n.classes,i):n.classes.push(i)),j.hooks.run("wrap",n);var s="";for(var o in n.attributes)s+=" "+o+'="'+(n.attributes[o]||"").replace(/"/g,"&quot;")+'"';return"<"+n.tag+' class="'+n.classes.join(" ")+'"'+s+">"+n.content+"</"+n.tag+">"},!c.document)return c.addEventListener&&(j.disableWorkerMessageHandler||c.addEventListener("message",function(e){var a=JSON.parse(e.data),t=a.language,r=a.code,n=a.immediateClose;c.postMessage(j.highlight(r,j.languages[t],t)),n&&c.close()},!1)),j;var e,t=j.util.currentScript();function r(){j.manual||j.highlightAll()}return t&&(j.filename=t.src,t.hasAttribute("data-manual")&&(j.manual=!0)),j.manual||("loading"===(e=document.readyState)||"interactive"===e&&t&&t.defer?document.addEventListener("DOMContentLoaded",r):window.requestAnimationFrame?window.requestAnimationFrame(r):window.setTimeout(r,16)),j}(_self);"undefined"!=typeof module&&module.exports&&(module.exports=Prism),"undefined"!=typeof global&&(global.Prism=Prism),Prism.languages.scopes={comment:[{pattern:/^(?<pad> *)#.*(?:\n|$)(?: (?=\k<pad>).+(?:\n|$))*/gm},{pattern:/#.*$/}],string:[{pattern:/(?<pad>(?: )*)"""".*(?:\n|$)(?:(?:(?:\k<pad>    .*| *))(\n|$))*/gm,greedy:!0},{pattern:/"(?:\\"|(?!["\n]).)*"/,greedy:!0,inside:{"escape-code":{pattern:/\\x[0-9A-Fa-f]{2}|\\./,alias:"variable"}}}],"quoted-symbol":{pattern:/'[^,'()\[\]{}\s\n]+/,alias:["constant","bold"]},keyword:{pattern:/(^|[,'()\[\]{} ])(?:sugar-log|run-stage|__this-scope|switch|if|indirect-let|let|spice-unquote-arguments|spice-unquote|spice-quote|merge|break|repeat|loop|return|try|embed|do|rawcall|call|raise|_|sugar-quote|label|inline|fn|define|assert|globals|:|this-function|define-infix|except|continue|new|packed|plain|static|options|square-list|in|syntax-log|unquote-splice|quote|curly-list|default|pass|case|then|elseif|else)(?=$|[,'()\[\]{} ])/gm,lookbehind:!0},sugar:{pattern:/(^|[,'()\[\]{} ])(?:test-modules|test|test-error|test-compiler-error|features|struct|spice-match|inout-geometry|inout|uniform|buffer|out|fragment_depth|output_primitive|input_primitive|shared|fnchain|decorate-fnchain|enum|-->|spice-capture|capture|decorate-capture|sugar-set-scope!|define-infix<|define-infix>|qq|for|va-option|<-:|as:=|define-sugar-macro|using|import|match|spice|sugar|sugar-match|while|static-assert|define-sugar-block-scope-macro|define-sugar-scope-macro|chain-typed-symbol-handler|from|inline\.\.\.|fn\.\.\.|::|fold-locals|sugar-eval|decorate-let|decorate-struct|decorate-type|decorate-typedef|decorate-inline|decorate-fn|decorate-vvv|vvv|@@|sugar-if|static-if|global|local|type\+|typedef|typedef\+|locals|bind|fold|unlet|static-match|typematch|dispatch|include)(?=$|[,'()\[\]{} ])/gm,lookbehind:!0,alias:"keyword"},spice:{pattern:/(^|[,'()\[\]{} ])(?:char|compose|join|span|mix|static-typify|typify|decons|list-constructor|type>|type<|type>=|type<=|type!=|__unbox|static-branch|const\.add\.i32\.i32|const\.icmp<=\.i32\.i32|raises|union-storage-type|union-storageof|&\?|storagecast|bindingof|locationof|elementsof|argumentsof|elementof|static-error|va-rifold|va-rfold|va-lifold|va-lfold|tostring|repr|drop|getattr|typeattr|rslice|lslice|copy|hash1|unpack|or-branch|and-branch|safe-shl|as|imply|real->integer|real->real|integer->real|integer->integer|static-integer->real|static-integer->integer|protect|signed|mutable@|mutable|sign|abs|pow|sabs|va-option-branch|Closure->Collector|Closure->Generator|Closure->Accessor|returnof|viewof|uniqueof|keyof|qualifiersof|unqualified|unsized\?|coerce-call-arguments|report|opaque|as\?|imply\?|wrap-if-not-run-stage|hash-storage|key|__countof-aggregate|vector-reduce|__assert|__static-assert|va-unnamed|va-split|va-range|va-map|va-empty\?|va-append-va|private|extern|packedtupleof|__unpack-keyed-aggregate|__unpack-aggregate|parse-compile-flags|overloaded-fn-append|_static-compile-spirv|_static-compile-glsl|_static-compile|memocall|static-library|in-tuple\?|MethodsAccessor-typeattr|_not|append-to-type|append-to-scope|methodsof|defer|gen-union-extractvalue)(?=$|[,'()\[\]{} ])/gm,lookbehind:!0,alias:["function","bold"]},function:{pattern:/(^|[,'()\[\]{} ])(?:decoder|encoder|gen-argument-matcher|parse-argument-matcher|property|Option|permutate-range|retain|demux|mux|cascade|take|filter|gate|limit|reduce|map|flatten|->>|cat|each|collect|zip|ipair|imap|bitdim|dim|memoryBarrierShared|memoryBarrierBuffer|memoryBarrierImage|groupMemoryBarrier|memoryBarrier|barrier|atomicCompSwap|atomicMax|atomicMin|atomicXor|atomicOr|atomicAnd|atomicAdd|atomicExchange|fract|ceil|smoothstep|unpackSnorm4x8|unpackUnorm4x8|unpackSnorm2x16|unpackUnorm2x16|unpackHalf2x16|packSnorm4x8|packUnorm4x8|packSnorm2x16|packUnorm2x16|packHalf2x16|EndPrimitive|EmitVertex|local_size|imageStore|imageLoad|textureSamples|textureQueryLevels|textureQueryLod|textureSize|textureGather|textureOffset|textureLod|textureProj|texture|texelFetchOffset|texelFetch|uimage2DMSArray|uimage2DMS|uimageBuffer|uimageCubeArray|uimage2DArray|uimage1DArray|uimage2DRect|uimageCube|uimage3D|uimage2D|uimage1D|iimage2DMSArray|iimage2DMS|iimageBuffer|iimageCubeArray|iimage2DArray|iimage1DArray|iimage2DRect|iimageCube|iimage3D|iimage2D|iimage1D|image2DMSArray|image2DMS|imageBuffer|imageCubeArray|image2DArray|image1DArray|image2DRect|imageCube|image3D|image2D|image1D|transpose|dot|normalize|cross|length|ldexp|frexp|fma|inversesqrt|sqrt|powf|log2|exp2|log|exp|atan2|atanh|acosh|asinh|tanh|cosh|sinh|atan|acos|asin|tan|cos|sin|degrees|radians|floor|ssign|fsign|fabs|trunc|roundeven|round|step|fmix|\?|xchg|umax|umin|smax|smin|bnand|frem|fdiv|fmul|fsub|fadd|findlsb|findmsb|bitcount|bitreverse|bxor|bor|band|ashr|lshr|shl|urem|srem|udiv|sdiv|mul-nsw|mul-nuw|mul|sub-nsw|sub-nuw|sub|add-nsw|add-nuw|add|sitofp|uitofp|fptosi|fptoui|fpext|fptrunc|unreachable|discard|nullof|undef|va-countof|offsetof|getelementptr|getelementref|sext|zext|itrunc|swapvalue|insertvalue|extractvalue|shufflevector|insertelement|extractelement|set-execution-mode|volatile-store|volatile-load|store|load|ptrtoint|inttoptr|bitcast|typeof|fcmp<=u|fcmp<u|fcmp>=u|fcmp>u|fcmp-uno|fcmp!=u|fcmp==u|fcmp<=o|fcmp<o|fcmp>=o|fcmp>o|fcmp-ord|fcmp!=o|fcmp==o|icmp<=s|icmp<s|icmp>=s|icmp>s|icmp<=u|icmp<u|icmp>=u|icmp>u|volatile|atomic|atomicrmw|__barrier|cmpxchg|Image-texel-pointer|Image-query-samples|Image-query-levels|Image-query-lod|Image-query-size|__drop|Image-write|Image-read|sample|icmp!=|icmp==|unique-visible\?|hide-traceback|reftoptr|ptrtoref|deref|assign|dropped\?|lose|viewing|view|move|dupe|malloc-array|alloca-array|free|malloc|alloca|dump-uniques|dump-spice|dump-debug|dump-template|dump|branch|raising|returning|sc_parse_from_string|sc_parse_from_path|sc_closure_get_context|sc_closure_get_template|sc_closure_get_docstring|sc_anchor_offset|sc_anchor_column|sc_anchor_lineno|sc_anchor_path|sc_anchor_new|sc_list_compare|sc_list_reverse|sc_list_next|sc_list_at|sc_list_count|sc_list_decons|sc_list_join|sc_list_serialize|sc_list_repr|sc_list_dump|sc_list_cons|sc_function_type_return_type|sc_function_type_raising|sc_function_type|sc_function_type_is_variadic|sc_sampled_image_type|sc_image_type|sc_strip_qualifiers|sc_refer_storage_class|sc_refer_flags|sc_refer_type|sc_mutate_type|sc_unique_type|sc_view_type|sc_arguments_type_getarg|sc_arguments_type_argcount|sc_arguments_type_join|sc_arguments_type|sc_union_storage_type|sc_packed_tuple_type|sc_tuple_type|sc_matrix_type|sc_vector_type|sc_array_type|sc_typename_type_set_opaque|sc_typename_type_set_storage|sc_typename_type_get_super|sc_typename_type|sc_integer_type_is_signed|sc_integer_type|sc_type_bitcountof|sc_pointer_type_set_element_type|sc_pointer_type_set_storage_class|sc_pointer_type_get_storage_class|sc_pointer_type_set_flags|sc_pointer_type_get_flags|sc_pointer_type|sc_key_type|sc_type_key|sc_type_is_view|sc_type_is_refer|sc_type_set_symbol|sc_type_next|sc_type_string|sc_type_is_default_suffix|sc_type_compatible|sc_type_is_superof|sc_type_is_plain|sc_type_is_opaque|sc_type_storage|sc_type_debug_abi|sc_type_kind|sc_type_is_unsized|sc_type_countof|sc_type_offsetof|sc_type_alignof|sc_type_sizeof|sc_type_field_name|sc_type_field_index|sc_type_element_at|sc_type_set_docstring|sc_type_get_docstring|sc_type_local_at|sc_type_at|sc_string_rslice|sc_string_lslice|sc_string_buffer|sc_string_compare|sc_string_count|sc_string_match|sc_string_join|sc_string_new_from_cstr|sc_string_new|sc_symbol_style|sc_symbol_count|sc_symbol_is_variadic|sc_symbol_to_string|sc_symbol_new_unique|sc_symbol_new|sc_scope_next_deleted|sc_scope_next|sc_scope_unbind|sc_scope_get_parent|sc_scope_new_subscope_with_docstring|sc_scope_new_subscope|sc_scope_unparent|sc_scope_reparent|sc_scope_new_with_docstring|sc_scope_new|sc_scope_bind_with_docstring|sc_scope_bind|sc_scope_docstring|sc_scope_module_docstring|sc_scope_local_at|sc_scope_at|sc_load_object|sc_load_library|sc_import_c|sc_hashbytes|sc_hash2x64|sc_hash|sc_map_set|sc_map_get|sc_set_signal_abort|sc_exit|sc_abort|sc_dump_error|sc_format_error|sc_error_new|sc_error_append_calltrace|sc_set_globals|sc_get_original_globals|sc_get_globals|sc_basename|sc_dirname|sc_realpath|sc_is_directory|sc_is_file|sc_merge_new|sc_label_set_body|sc_label_new|sc_unquote_new|sc_quote_new|sc_const_pointer_extract|sc_const_extract_at|sc_const_real_extract|sc_const_int_extract_word|sc_const_int_extract|sc_const_null_new|sc_const_pointer_new|sc_const_aggregate_new|sc_const_real_new|sc_const_int_words_new|sc_const_int_new|sc_loop_set_body|sc_loop_arguments|sc_loop_new|sc_call_set_rawcall|sc_call_is_rawcall|sc_call_append_argument|sc_call_new|sc_parameter_name|sc_parameter_is_variadic|sc_parameter_new|sc_switch_append_default|sc_switch_append_do|sc_switch_append_pass|sc_switch_append_case|sc_switch_new|sc_cond_new|sc_global_string_new_from_cstr|sc_global_string_new|sc_global_storage_class|sc_global_descriptor_set|sc_global_binding|sc_global_location|sc_global_set_descriptor_set|sc_global_set_binding|sc_global_set_location|sc_global_set_constructor|sc_global_set_initializer|sc_global_new|sc_expression_append|sc_expression_set_scoped|sc_expression_new|sc_template_parameter|sc_template_parameter_count|sc_template_is_inline|sc_template_set_inline|sc_template_set_body|sc_template_append_parameter|sc_template_get_name|sc_template_set_name|sc_template_new|sc_getarglist|sc_getarg|sc_argcount|sc_extract_argument_list_new|sc_extract_argument_new|sc_argument_list_new|sc_empty_argument_list|sc_keyed_new|sc_value_kind_string|sc_value_unwrap|sc_value_wrap|sc_identity|sc_value_block_depth|sc_value_kind|sc_value_compare|sc_value_is_pure|sc_value_is_constant|sc_valueref_tag|sc_value_anchor|sc_value_qualified_type|sc_value_type|sc_value_tostring|sc_value_ast_repr|sc_value_content_repr|sc_value_repr|sc_write|sc_format_message|sc_default_styler|sc_prompt_add_completion_from_scope|sc_prompt_add_completion|sc_prompt_load_history|sc_prompt_save_history|sc_prompt|sc_prompt_set_autocomplete_handler|sc_set_typecast_handler|sc_launch_args|sc_enter_solver_cli|sc_compile_object|sc_default_target_triple|sc_spirv_to_glsl|sc_compile_glsl|sc_compile_spirv|sc_compile|sc_typify|sc_typify_template|sc_eval_inline|sc_prove|sc_eval_stage|sc_eval|sc_expand|sc_cache_misses|sc_compiler_version|Value-none\?|verify-count|unbox-pointer|unbox-symbol|unbox-integer|unbox-verify|error@\+|error@|error|box-pointer|box-symbol|box-integer|ptrcmp==|ptrcmp!=|swap|build-typify-function|cons|type==|none\?|unpack2|runtime-aggregate-type-constructor|aggregate-type-constructor|sc_argument_list_join|sc_argument_list_map_filter_new|sc_argument_list_map_new|type-comparison-func|compare-type|box-spice-macro|spice-macro|function->SpiceMacro|spice-macro-verify-signature|countof|intdiv|powi|dispatch-and-or|string@|simple-folding-autotype-signed-binary-op|simple-folding-signed-binary-op|simple-signed-binary-op|simple-folding-autotype-binary-op|autoboxer|simple-folding-binary-op|simple-binary-op|spice-binary-op-macro|unbalanced-binary-op-dispatch|balanced-lvalue-binary-op-dispatch|balanced-binary-op-dispatch|unary-or-unbalanced-binary-op-dispatch|unary-or-balanced-binary-op-dispatch|unary-op-dispatch|unary-or-unbalanced-binary-operation|unary-or-balanced-binary-operation|unary-operation|unbalanced-binary-operation|balanced-lvalue-binary-operation|balanced-binary-operation|binary-op-error|unary-op-error|balanced-lvalue-binary-operator|balanced-binary-operator|binary-operator-r|binary-operator|unary-operator|gen-cast-op|as-converter|imply-converter|cast-converter|operator-valid\?|cast-error|real-as|real-imply|integer-as|integer-imply|integer-static-imply|safe-integer-cast|integer-tobool|spice-converter-macro|spice-cast-macro|value-as|unbox|#symbol|#list|symbol-handler|list-handler|alignof|bitcountof|sizeof|superof|storageof|signed\?|constant\?|select-op-macro|expand-define|make-const-type-property-function|make-const-value-property-function|extract-single-type-arg|extract-single-arg|clone-scope-contents|rtl-multiop|ltr-multiop|make-expand-and-or|expand-and-or|quasiquote-any|quasiquote-list|split-dotted-symbol|dotted-symbol\?|parse-infix-expr|rtl-infix-op-eq|infix-op-ge|infix-op-gt|infix-op|unpack-infix-op|has-infix-ops\?|get-ifx-op|make-expand-define-infix|expand-define-infix|get-ifx-symbol|pointer-ras|pointer-as|pointer-imply|pointer-type-imply\?|extract-integer|print|empty\?|sugar-macro|sugar-scope-macro|sugar-block-scope-macro|function->SugarMacro|gen-cast\?|next-head\?|\.\.=|expand-apply|expand-infix-let|make-inplace-op|make-inplace-let-op|gen-vector-reduction|merge-scope-symbols|require-from|find-module-path|slice|patterns-from-namestr|load-module|dots-to-slashes|exec-module|make-module-path|va@|max|min|vectorof|arrayof|tupleof|compile-object|compile-spirv|compile-glsl|compile|gen-or-matcher|gen-match-matcher|uncomma|gen-sugar-matcher|gen-match-block-parser|check-count|extract-name-params-body|extern-new|clamp|vector-binary-op-dispatch|vector-binary-operator|signed-vector-binary-op|all\?|any\?|gen-arrayof|gen-tupleof|make-unpack-function|convert-assert-args|rrange|range|static-compile-spirv|static-compile-glsl|static-compile|nodefault\?|sc_argument_list_join_values|type-factory|memoize|enumerate|infinite-range|va-join|load-object|load-library|list-parse|list-load|set-signal-abort!|launch-args|exit|set-globals!|realpath|default-styler|compiler-version|io-write!|memo|_memo|gen-allocator-sugar|mod|distance|typematcher|hex|dec|oct|bin|integer->string|typeinit|defer-type|print-logo|compiler-version-string)(?=$|[,'()\[\]{} ])/gm,lookbehind:!0},operator:{pattern:/(^|[,'()\[\]{} ])(?:@|=|\.\.|\^|&|%|\/|\*|-|\+|>=|>|<=|<|!=|==|~|not|or|and|\.|<-|:=|\^=|\|=|&=|%=|\/=|\*=|\+=|-=|\|\||\||<<=|>>=|\/\/=|<<|>>|\/\/|\*\*|->)(?=$|[,'()\[\]{} ])/gm,lookbehind:!0},constant:{pattern:/(^|[,'()\[\]{} ])(?:NaN|-Inf|Inf|nan|-inf|\+inf|-e:f64|e:f64|-e:f32|e:f32|-e|e|-pi:f64|pi:f64|-pi:f32|pi:f32|-pi|pi|unnamed|none|null|false|true)(?=$|[,'()\[\]{} ])/gm,lookbehind:!0},type:{pattern:/(^|[,'()\[\]{} ])(?:One|String|Set|UpgradeError|Weak|Rc|Property|UnwrapError|MapError|Map|DrawArraysIndirectCommand|DispatchIndirectCommand|findLSB|fwidth|dFdy|dFdx|gsampler|sampler|usampler2DMSArray|utexture2DMSArray|usampler2DMS|utexture2DMS|usamplerBuffer|utextureBuffer|usamplerCubeArray|utextureCubeArray|usampler2DArray|utexture2DArray|usampler1DArray|utexture1DArray|usampler2DRect|utexture2DRect|usamplerCube|utextureCube|usampler3D|utexture3D|usampler2D|utexture2D|usampler1D|utexture1D|isampler2DMSArray|itexture2DMSArray|isampler2DMS|itexture2DMS|isamplerBuffer|itextureBuffer|isamplerCubeArray|itextureCubeArray|isampler2DArray|itexture2DArray|isampler1DArray|itexture1DArray|isampler2DRect|itexture2DRect|isamplerCube|itextureCube|isampler3D|itexture3D|isampler2D|itexture2D|isampler1D|itexture1D|sampler2DMSArray|texture2DMSArray|sampler2DMS|texture2DMS|samplerBuffer|textureBuffer|samplerCubeArray|textureCubeArray|sampler2DArray|texture2DArray|sampler1DArray|texture1DArray|sampler2DRect|texture2DRect|samplerCube|textureCube|sampler3D|texture3D|sampler2D|texture2D|sampler1D|texture1D|gsampler2DMSArray|gsampler2DMS|gsamplerBuffer|gsamplerCubeArray|gsampler2DArray|gsampler1DArray|gsampler2DRect|gsamplerCube|gsampler3D|gsampler2D|gsampler1D|bmat4|umat4|imat4|dmat4|mat4|bmat4x4|umat4x4|imat4x4|dmat4x4|mat4x4|bmat4x3|umat4x3|imat4x3|dmat4x3|mat4x3|bmat4x2|umat4x2|imat4x2|dmat4x2|mat4x2|bmat3|umat3|imat3|dmat3|mat3|bmat3x4|umat3x4|imat3x4|dmat3x4|mat3x4|bmat3x3|umat3x3|imat3x3|dmat3x3|mat3x3|bmat3x2|umat3x2|imat3x2|dmat3x2|mat3x2|bmat2|umat2|imat2|dmat2|mat2|bmat2x4|umat2x4|imat2x4|dmat2x4|mat2x4|bmat2x3|umat2x3|imat2x3|dmat2x3|mat2x3|bmat2x2|umat2x2|imat2x2|dmat2x2|mat2x2|bvec4|uvec4|ivec4|dvec4|vec4|bvec3|uvec3|ivec3|dvec3|vec3|bvec2|uvec2|ivec2|dvec2|vec2|gvec4|gvec3|gvec2|mat-type|vec-type|FunctionChain|Enum|read-eval-print-loop|SpiceCapture|CaptureTemplate|Capture|Box|GrowingArray|FixedArray|Array|CEnum|CUnion|CStruct|SampledImage|Image|constant|function|Raises|Arguments|typename|Qualify|union|tuple|matrix|vector|array|pointer|real|integer|opaquepointer|aggregate|immutable|Sampler|usize|CompileStage|SpiceMacro|Closure|Error|SourceFile|Scope|string|Anchor|list|f128|f80|f64|f32|f16|u64|u32|u16|u8|i64|i32|i16|i8|bool|Value|_Value|Builtin|Symbol|Variadic|Unknown|type|noreturn|Nothing|voidstar|SpiceMacroFunction|ValueArrayPointer|TypeArrayPointer|intptr|void|Accessor|NullType|_:|SugarMacro|Collector|Generator|Struct|SugarMacroFunction|rawstring|hash|package|incomplete|OverloadedFunction|nodefault|MethodsAccessor|TypeInitializer|super-type|this-type)(?=$|[,'()\[\]{} ])/gm,lookbehind:!0,alias:"important"},"global-symbol":{pattern:/(^|[,'()\[\]{} ])(?:drain|gl_LocalInvocationIndex|gl_GlobalInvocationID|gl_LocalInvocationID|gl_WorkGroupSize|gl_WorkGroupID|gl_NumWorkGroups|gl_InstanceIndex|gl_InstanceID|gl_VertexIndex|gl_VertexID|gl_FragCoord|gl_FragDepth|gl_ClipDistance|gl_PointSize|gl_Position|rgba32f|rg32f|r32f|rgba32ui|rg32ui|r32ui|rgba32i|rg32i|r32i|rgba32|rg32|r32|rgba16_snorm|rg16_snorm|r16_snorm|rgba16f|rg16f|r16f|rgba16ui|rg16ui|r16ui|rgba16i|rg16i|r16i|rgba16|rg16|r16|rgba8_snorm|rg8_snorm|r8_snorm|rgba8ui|rg8ui|r8ui|rgba8i|rg8i|r8i|rgba8|rg8|r8|barrier-kind-memory-shared|barrier-kind-memory-buffer|barrier-kind-memory-image|barrier-kind-memory-group|barrier-kind-memory|barrier-kind-control|compiler-file-kind-llvm|compiler-file-kind-bc|compiler-file-kind-asm|compiler-file-kind-object|compile-flag-cache|compile-flag-O3|compile-flag-O2|compile-flag-O1|compile-flag-no-debug-info|compile-flag-dump-time|compile-flag-dump-function|compile-flag-dump-module|compile-flag-dump-disassembly|unknown-anchor|typename-flag-plain|pointer-flag-non-writable|pointer-flag-non-readable|global-flag-flat|global-flag-block|global-flag-restrict|global-flag-coherent|global-flag-volatile|global-flag-non-readable|global-flag-non-writable|global-flag-buffer-block|value-kind-const-pointer|value-kind-const-aggregate|value-kind-const-real|value-kind-const-int|value-kind-undef|value-kind-pure-cast|value-kind-global-string|value-kind-global|value-kind-function|value-kind-cast|value-kind-execution-mode|value-kind-image-write|value-kind-image-read|value-kind-image-query-samples|value-kind-image-query-levels|value-kind-image-query-lod|value-kind-image-query-size|value-kind-sample|value-kind-annotate|value-kind-triop|value-kind-binop|value-kind-unop|value-kind-fcmp|value-kind-icmp|value-kind-barrier|value-kind-cmpxchg|value-kind-atomicrmw|value-kind-store|value-kind-load|value-kind-free|value-kind-malloc|value-kind-alloca|value-kind-shuffle-vector|value-kind-insert-element|value-kind-extract-element|value-kind-get-element-ptr|value-kind-insert-value|value-kind-extract-value|value-kind-select|value-kind-call|value-kind-switch|value-kind-condbr|value-kind-loop-label|value-kind-label|value-kind-discard|value-kind-unreachable|value-kind-raise|value-kind-return|value-kind-repeat|value-kind-merge|value-kind-loop-label-arguments|value-kind-extract-argument|value-kind-argument-list|value-kind-exception|value-kind-parameter|value-kind-keyed|value-kind-parameter-template|value-kind-extract-argument-template|value-kind-argument-list-template|value-kind-call-template|value-kind-merge-template|value-kind-switch-template|value-kind-cond-template|value-kind-compile-stage|value-kind-unquote|value-kind-quote|value-kind-expression|value-kind-keyed-template|value-kind-loop-arguments|value-kind-loop|value-kind-label-template|value-kind-template|type-kind-sampled-image|type-kind-image|type-kind-sampler|type-kind-function|type-kind-tuple|type-kind-matrix|type-kind-vector|type-kind-array|type-kind-pointer|type-kind-real|type-kind-integer|type-kind-typename|type-kind-arguments|type-kind-qualify|style-location|style-warning|style-error|style-comment|style-type|style-instruction|style-operator|style-sfxfunction|style-function|style-keyword|style-number|style-string|style-symbol|style-none|compiler-timestamp|debug-build\?|compiler-path|compiler-dir|cache-dir|unroll-limit|operating-system|typed-symbol-handler-symbol|symbol-handler-symbol|list-handler-symbol|ellipsis-symbol|default-target-triple|dot-sym|dot-char|#ifx:raises|#ifx:<-:|#ifx:<-|#ifx:@|#ifx:\.|#ifx::|#ifx:as|#ifx:\*\*|#ifx:\*|#ifx:\/\/|#ifx:\/|#ifx:mod|#ifx:%|#ifx:\+|#ifx:-|#ifx:>>|#ifx:<<|#ifx:\.\.|#ifx:&|#ifx:\^|#ifx:\||#ifx:in|#ifx:==|#ifx:!=|#ifx:>=|#ifx:<=|#ifx:>|#ifx:<|#ifx:and|#ifx:or|#ifx:as:=|#ifx::=|#ifx:\.\.=|#ifx:\^=|#ifx:\|=|#ifx:&=|#ifx:<<=|#ifx:>>=|#ifx:%=|#ifx:\/\/=|#ifx:\/=|#ifx:\*=|#ifx:-=|#ifx:\+=|#ifx:=|#ifx:->|backslash-char|slash-char|question-mark-char|module-name|module-path|module-dir|main-module\?)(?=$|[,'()\[\]{} ])/gm,lookbehind:!0,alias:"variable"},number:{pattern:/(^|[,'()\[\]{} ])[+-]?(?:\d+(?:\.\d+)?|0b[01]+(?:\.[01]+)?|0o[0-7]+(?:\.[0-7]+)?|0x[\da-fA-F]+(?:\.[\da-fA-F]+)?)(?:e[+-]?\d+)?(?:\:(?:[ui](?:8|16|32|64)|usize|f32|f64))?(?=$|[,'()\[\]{} ])/gm,lookbehind:!0}};